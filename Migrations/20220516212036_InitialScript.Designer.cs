// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartInverterAPI.Data;

#nullable disable

namespace SmartInverterAPI.Migrations
{
    [DbContext(typeof(InverterContext))]
    [Migration("20220516212036_InitialScript")]
    partial class InitialScript
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SmartInverterAPI.Models.RawData", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<decimal>("BatteryPerc")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("LoadWatts")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("LoggedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PowerSource")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SessionConsumptionKWh")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SessionSolarGeneratedKWh")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SolarOutputWatts")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("StrName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TimeIntervalSec")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("RawData");
                });
#pragma warning restore 612, 618
        }
    }
}
